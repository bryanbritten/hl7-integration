services:
  producer:
    build:
      context: ./docker/producer
    container_name: producer
    depends_on:
      - consumer
    restart: on-failure
    healthcheck:
      test: [ "CMD", "pgrap", "-f", "producer.py" ]
      interval: 5m
      timeout: 5s
      retries: 5
      start_period: 30s
  consumer:
    build:
      context: ./docker/consumer
    container_name: consumer
    ports:
      - "2575:2575"
    restart: on-failure
    healthcheck:
      test: [ "CMD", "pgrep", "-f", "consumer.py" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  minio:
    build:
      context: ./docker/storage/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    restart: on-failure
  minio-client:
    build:
      context: ./docker/storage/minio-client
    container_name: minio-client
    depends_on:
      - minio
    restart: on-failure
  transformer:
    build:
      context: .
      dockerfile: docker/transformer/Dockerfile
    container_name: transformer
    depends_on:
      - minio
    restart: on-failure
    healthcheck:
      test: [ "CMD", "pgrep", "-f", "entrypoint.py" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  fhir-converter:
    build:
      context: ./docker/fhir-converter
    container_name: fhir-converter
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/check" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
  fhir-transformer:
    build:
      context: .
      dockerfile: docker/fhir-transformer/Dockerfile
    container_name: fhir-transformer
    depends_on:
      - minio
    restart: on-failure
    healthcheck:
      test: [ "CMD", "pgrep", "-f", "fhir-transformer.py" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
volumes:
  minio-data:
